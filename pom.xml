<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>com.oxygenxml</groupId>
		<artifactId>oxygen-addons-superpom</artifactId>
		<version>25.0-SNAPSHOT</version>
	</parent>
	
	<artifactId>oxygen-git-client-addon</artifactId>
	<version>5.1.1-SNAPSHOT</version>
    
	<developers>
		<developer>
			<name>Alex Jitianu</name>
			<email>alex_jitianu@sync.ro</email>
			<roles>
				<role>manager</role>
			</roles>
		</developer>
		<developer>
			<name>Sorin Carbunaru</name>
			<email>sorin_carbunaru@sync.ro</email>
			<roles>
				<role>co-manager</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<oxygen.version>25.0.0.0</oxygen.version>
		<maven.compiler.source>15</maven.compiler.source>
		<maven.compiler.target>15</maven.compiler.target>
		<!-- We want sonar. -->
		<sonar.skip>false</sonar.skip>
		<oxyProductName>editor</oxyProductName>
	</properties>

	<repositories>
		<repository>
			<id>public</id>
			<name>oXygen public artifacts</name>
			<url>http://www.oxygenxml.com/maven</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- Mockito and PowerMock -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>3.6.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>2.0.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>2.0.9</version>
			<scope>test</scope>
		</dependency>

		<!-- JGit -->
		<!-- EXM-49967 oxygen-superpom-versions has a JGit 5.11 dependency. We 
			need to override it, othewise we will distribute mix versions. -->
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>6.3.0.202209071007-r</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit.ssh.jsch</artifactId>
			<version>6.3.0.202209071007-r</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit.ssh.apache</artifactId>
			<version>6.3.0.202209071007-r</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit.junit</artifactId>
			<version>6.3.0.202209071007-r</version>
			<scope>test</scope>
		</dependency>
        <dependency>
		    <groupId>org.eclipse.jgit</groupId>
		    <artifactId>org.eclipse.jgit.ssh.apache.agent</artifactId>
		    <version>6.3.0.202209071007-r</version>
		</dependency>

		<!-- JAXB -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<scope>provided</scope>
		</dependency>

        <!-- Awaitility -->
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>net.bytebuddy</groupId>
					<artifactId>byte-buddy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Oxygen SDK -->
		<dependency>
			<groupId>com.oxygenxml</groupId>
			<artifactId>oxygen-sdk</artifactId>
			<version>${oxygen.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-1.2-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- We need log4j in TCs because the old version of sdk use log4j. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jfcunit</groupId>
			<artifactId>jfcunit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- EXM-49720 - SET SCOPE PROVIDED TO EXCLUDE slf4j-api AND logback FROM 
			ADDON. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- EXM-49720 END -->

	</dependencies>

	<build>
		<plugins>
		<!-- Override the one from oxygen-superpom which enforces compilatino to java 8. -->
		      <plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-compiler-plugin</artifactId>
      		  </plugin>
		    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-dependencies-jre-version-compatible-with-our-compile-target-jre-version</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-dependencies-jre-version-compatible-with-our-compile-target-jre-version</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archiveBaseDirectory>${project.basedir}</archiveBaseDirectory>
							<descriptors>
								<descriptor>assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>

					<!-- Put the images into a separate JAR -->
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<id>build-images-jar</id>
						<configuration>
							<descriptors>
								<descriptor>assembly-images.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>


				</executions>
			</plugin>

			<!-- Download licenses -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.8</version>
				<configuration>
					<licensesConfigFile>${project.basedir}/license-config/licenses.xml</licensesConfigFile>
					<includedScopes>compile</includedScopes>
					<sortByGroupIdAndArtifactId>true</sortByGroupIdAndArtifactId>
				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<include>addon.xml</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<runOrder>alphabetical</runOrder>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
					<configuration>
						<excludes>

						</excludes>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-assembly-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>single</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>
												download-licenses
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>